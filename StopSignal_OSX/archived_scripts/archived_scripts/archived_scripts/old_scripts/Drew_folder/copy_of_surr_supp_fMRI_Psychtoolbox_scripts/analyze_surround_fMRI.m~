clear all;close all;warning off;% First, move to the correct directory:thisDir=pwd; dataDir='/Users/scanner3t/Desktop/Experiments/SilverLab/OSX/Results';datafile = 'ssfmriMAS_practice011309_1.mat';chdir(dataDir)load(datafile);chdir(thisDir);nosurroundscans = 0; parsurroundscans = 0; orthsurroundscans = 0; numconditions = [0 0 0];for i=1:length(results) %number of scans   	sorno = results(i).scanHistory.whichCondition; % 1 is no surround, 2 is parallel surround, 3 is orthogonal surround    ok{i, sorno} = find(~isnan(results(i).scanHistory.actualresponses));	ll(i, sorno) = length(ok{i, sorno}); %total number of valid responses	correct{i, sorno} = results(i).scanHistory.correctanswer(ok{i, sorno}); %correct answers	nr{i, sorno} = results(i).scanHistory.actualresponses(ok{i, sorno}); %actual responses	correcttrials{i, sorno} = (nr{i, sorno} == correct{i, sorno}); %correct responses	hits(i, sorno) = sum((nr{i, sorno} == 1) & (correct{i, sorno} == 1));	correctRejects(i, sorno) = sum(nr{i, sorno} == 0 & correct{i, sorno} == 0);	misses(i, sorno) = sum(nr{i, sorno} == 0 & correct{i, sorno} == 1);	falseAlarms(i, sorno) = sum(nr{i, sorno} == 1 & correct{i, sorno} == 0);	RTs(i, sorno) = mean(results(i).scanHistory.RT(ok{i, sorno}));	yes(i, sorno) = sum(nr{i, sorno} == 1); %yes response	no(i, sorno) = sum(nr{i, sorno} == 0); %no response	ps(i, sorno) = sum(correct{i, sorno} == 1); %target present	ns(i, sorno) = sum(correct{i, sorno} == 0); %target absent	nh(i, sorno) = hits(i, sorno) / ll(i, sorno);	nm(i, sorno) = misses(i, sorno) / ll(i, sorno);	ncr(i, sorno) = correctRejects(i, sorno) / ll(i, sorno);	nfa(i, sorno) = falseAlarms(i, sorno) / ll(i, sorno);	nyes(i, sorno) = yes(i, sorno) / ll(i, sorno);	nno(i, sorno) = no(i, sorno) / ll(i, sorno);	contrastvals = linspace(results(1).stimParams(1).contrastRange(1), results(1).stimParams(1).contrastRange(2), ...        results(1).stimParams(1).contrastIncrements);    contraststep = contrastvals(2) - contrastvals(1);    for concounter = 1:length(contrastvals)		alltrialindices{concounter,i, sorno} = find(results(i).scanHistory.actualcontrast == contrastvals(concounter));		validtrialindices{concounter,i, sorno} = find(results(i).scanHistory.actualcontrast(ok{i, sorno}) == contrastvals(concounter));		validnumtrials(concounter,i, sorno) = length(validtrialindices{concounter,i, sorno});		allnumtrials(concounter,i, sorno) = length(alltrialindices{concounter,i, sorno});		numcorrect(concounter,i, sorno) = 0;		for trialcounter = 1:length(validtrialindices{concounter,i, sorno})			if correcttrials{i, sorno}(validtrialindices{concounter,i, sorno}(trialcounter)) == 1 %correct				numcorrect(concounter,i, sorno) = numcorrect(concounter,i, sorno) + 1;			end		end	 	perf(concounter,i, sorno) = numcorrect(concounter,i, sorno) / validnumtrials(concounter,i, sorno);    end    if results(i).scanHistory.whichCondition == 1 %no surround        nosurroundscans = nosurroundscans + 1;        numconditions(1) = 1;    elseif results(i).scanHistory.whichCondition == 2 %parallel surround        parsurroundscans = parsurroundscans + 1;        numconditions(2) = 1;    elseif results(i).scanHistory.whichCondition == 3 %orthogonal surround        orthsurroundscans = orthsurroundscans + 1;        numconditions(3) = 1;    endendtotalcond = sum(numconditions);figurehold on;parsurroundcounter = 1; orthsurroundcounter = 1; nosurroundcounter = 1;for i = 1:length(results)    if results(i).scanHistory.whichCondition == 1        subplot(totalcond,max([nosurroundscans parsurroundscans orthsurroundscans]),nosurroundcounter);        plot(results(i).scanHistory.actualcontrast, '-or');        axis([1 length(results(i).scanHistory(1).contrast + 1) (min(contrastvals) - contraststep) (max(contrastvals) + contraststep)]);        nosurroundcounter = nosurroundcounter + 1;    elseif results(i).scanHistory.whichCondition == 2        subplot(totalcond,max([nosurroundscans parsurroundscans orthsurroundscans]),...            max([nosurroundscans parsurroundscans orthsurroundscans])+parsurroundcounter);        plot(results(i).scanHistory.actualcontrast, '-ob');        axis([1 length(results(i).scanHistory(1).contrast + 1) (min(contrastvals) - contraststep) (max(contrastvals) + contraststep)]);        parsurroundcounter = parsurroundcounter + 1;    elseif results(i).scanHistory.whichCondition == 3        subplot(totalcond,max([nosurroundscans parsurroundscans orthsurroundscans]),...            max([nosurroundscans parsurroundscans orthsurroundscans])+parsurroundcounter); %CHECK THIS        plot(results(i).scanHistory.actualcontrast, '-og');        axis([1 length(results(i).scanHistory(1).contrast + 1) (min(contrastvals) - contraststep) (max(contrastvals) + contraststep)]);        orthsurroundcounter = orthsurroundcounter + 1;    end	hold on;endtotalhits = [0 0 0]; totalmisses = [0 0 0]; totalcorrectRejects = [0 0 0]; totalfalseAlarms = [0 0 0];totalyes = [0 0 0]; totalno = [0 0 0]; totalll = [0 0 0]; totalRT = [0 0 0];totalallnumtrials = zeros(length(contrastvals),3); totalvalidnumtrials = zeros(length(contrastvals),3);totalnumcorrect = zeros(length(contrastvals),3); %contrast, no surround, parallel surround, orthogonal surroundname{1} = 'no surround'; name{2} = 'parallel surround'; name{3} = 'orthogonal surround';%for i = 1:length(results)for i = 1:2:length(results)   	sorno = results(i).scanHistory.whichCondition; % 1 is no surround, 2 is parallel surround, 3 is orthogonal surround    totalhits(sorno) = totalhits(sorno) + hits(i,sorno);	totalmisses(sorno) = totalmisses(sorno) + misses(i,sorno);	totalcorrectRejects(sorno) = totalcorrectRejects(sorno) + correctRejects(i,sorno);	totalfalseAlarms(sorno) = totalfalseAlarms(sorno) + falseAlarms(i,sorno);	totalyes(sorno) = totalyes(sorno) + yes(i,sorno);   	totalno(sorno) = totalno(sorno) + no(i,sorno);	totalll(sorno) = totalll(sorno) + ll(i,sorno);	totalRT(sorno) = totalRT(sorno) + RTs(i,sorno);	totalallnumtrials(:,sorno) = totalallnumtrials(:,sorno) + allnumtrials(:,i,sorno);   	totalvalidnumtrials(:,sorno) = totalvalidnumtrials(:,sorno) + validnumtrials(:,i,sorno);	totalnumcorrect(:,sorno) = totalnumcorrect(:,sorno) + numcorrect(:,i,sorno);	totalperf(:,sorno) = totalnumcorrect(:,sorno) ./ totalvalidnumtrials(:,sorno);endfor sorno = 1:totalcond   	%Weib(sorno) = AnalyzeStaircase_surround(contrastvals, totalperf(:,sorno)', totalvalidnumtrials(:,sorno)',sorno,'doPlot');    Weib(sorno) = AnalyzeStaircase_surround(results(1).stimParams.pedestalContrast-contrastvals,...       	 totalperf(:,sorno)', totalvalidnumtrials(:,sorno)',sorno,'doPlot');    disp(sprintf('%s',name{sorno}));    disp(sprintf('Response bias: %4.1f%%', 100*(totalyes(sorno) / (totalyes(sorno) + totalno(sorno)))));    disp(sprintf('Number of valid trials: %d', sum(totalvalidnumtrials(:,sorno))));    disp(sprintf('Percent valid trials: %4.1f%%', 100*(sum(totalvalidnumtrials(:,sorno)) / sum(totalallnumtrials(:,sorno)))));    disp(sprintf('Percent correct: %4.1f%%', 100*(sum(totalnumcorrect(:,sorno)) / sum(totalvalidnumtrials(:,sorno)))));    %disp(sprintf('Discrimination threshold: %4.1f%%', 100*(Weib(sorno).thresh-results(1).stimParams.pedestalContrast)));    disp(sprintf('Discrimination threshold: %4.1f%%', 100*(Weib(sorno).thresh)));    disp(sprintf('Mean RT: %3.0f% milliseconds', 1000*(totalRT(sorno)/i)));    disp(sprintf(' '));end figure hold on if numconditions(1) == 1    semilogx(Weib(1).x,Weib(1).y,'ro');    plot(Weib(1).wx,Weib(1).wy,'-r'); end if numconditions(2) == 1     semilogx(Weib(2).x,Weib(2).y,'bo');    plot(Weib(2).wx,Weib(2).wy,'-b');  end if numconditions(3) == 1     semilogx(Weib(3).x,Weib(3).y,'go');     plot(Weib(3).wx,Weib(3).wy,'-g');  end legend('no surround data','no surround fit', 'parallel surround data', 'parallel surround fit',...     'orthogonal surround data','orthogonal surround fit');xlabel('threshold (pedestal contrast - target contrast)');warning on