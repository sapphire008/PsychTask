function scanHistory = doScan_surround(display, scan, params, runPriority, showTiming);pressKey2Begin_OSX_kbcheck(display,params.dispString);scan.fix.insertfix = 0;doTrial_surround_fMRI(display, scan.trials{3,28}, scan.fix, params); %clear screenif params.scanner == 1 || params.scanner == 3 %mock scanner    time = GetSecs;elseif params.scanner == 2    trigger = KbName('t');           		    while 1        WaitSecs(0.001);        [a,b,keycode] = PsychHID('KbCheck',display.forpnum);        if keycode(trigger)            time=GetSecs;  %this gets the time of the first scan (time counts relative to this)    	break;        end    endendtimeToEndTrial = 0;		% Total time from beginning of scan at which the						% current trial must end; however, it will only						% extend a given trial to this value -- it will not						% cut it short (waitTill will give a warning if the						% trial length causes a trial to overshoot this time).						nStep = params.contrastIncrements;contrastvals = linspace(params.contrastRange(1), params.contrastRange(2), params.contrastIncrements);sizevals = linspace(params.fixSizeRange(1), params.fixSizeRange(2), params.sizeIncrements);%Each run can either be attention to annulus or attention to fixif scan.whichCondition <= 3 %attention to annulus    if params.dummyScans == 1        for trialcounter = 1:(params.blockDuration / params.trialDuration)            scan.fix.target = 0; scan.fix.insertfix = 0;            if scan.whichCondition == 1 %no surround, diamond fixpoint                contrast = 8; loc = 28;            elseif scan.whichCondition == 2 %parallel surround, diamond fixpoint                contrast = 9; loc = 28;            elseif scan.whichCondition == 3 %orthogonal surround, diamond fixpoint                contrast = 10; loc = 28;            end            doTrial_surround_fMRI(display, scan.trials{contrast,loc}, scan.fix, params);            timeToEndTrial = timeToEndTrial + scan.trialDuration(contrast,loc);            waitTill_OSX(timeToEndTrial,display,time);            if trialcounter == params.blockDuration / params.trialDuration %last "trial"                doTrial_surround_fMRI(display, scan.trials{7,28}, scan.fix, params); % just wait with null square stimulus                timeToEndTrial = timeToEndTrial + scan.trialDuration(7,28);            else                doTrial_surround_fMRI(display, scan.trials{11,28}, scan.fix, params); % just wait with null diamond stimulus                timeToEndTrial = timeToEndTrial + scan.trialDuration(11,28);            end            waitTill_OSX(timeToEndTrial,display,time);        end    end    stairContrast = scan.startStep;    nCorrect = 0;    trialNum = 1;    for blockNum = 1:params.numberBlocks        %first half of block alternation - do task        for trialcounter = 1:(params.blockDuration / params.trialDuration)            absorpres = (ceil(rand * 2) - 1);            scan.fix.insertfix = 1;            fixabsorpres = (ceil(rand * 2) - 1);            if fixabsorpres == 1 %there is a fixation "target"                scan.fix.target = 1;                scan.fix.targetSize = params.constantFixSize;            else %no fixation "target"                scan.fix.target = 0;            end            if absorpres == 1 % contrast decrement present                loc = ceil(rand * 8);                if scan.whichCondition == 2 %parallel surround                    loc = loc + 9;                elseif scan.whichCondition == 3 %orthogonal surround                    loc = loc + 18;                end                doTrial_surround_fMRI(display, scan.trials{stairContrast,loc}, scan.fix, params);                timeToEndTrial = timeToEndTrial + scan.trialDuration(stairContrast,loc);                waitTill_OSX(timeToEndTrial,display,time);                if trialcounter == params.blockDuration / params.trialDuration %last trial in block                    [scanHistory.responses(trialNum), scanHistory.RT(trialNum)] = ...                        doTrial_surround_fMRI(display, scan.trials{12,28}, scan.fix, params);                    timeToEndTrial = timeToEndTrial + scan.trialDuration(12,28);                else                    [scanHistory.responses(trialNum), scanHistory.RT(trialNum)] = ...                        doTrial_surround_fMRI(display, scan.trials{1,28}, scan.fix, params);                    timeToEndTrial = timeToEndTrial + scan.trialDuration(1,28);			                end                scanHistory.correctanswer(trialNum) = 1;            else % contrast decrement absent                if scan.whichCondition == 2 %parallel surround                    loc = 18;                elseif scan.whichCondition == 3 %orthogonal surround                    loc = 27;                else                    loc = 9;                end                doTrial_surround_fMRI(display, scan.trials{stairContrast,loc}, scan.fix, params);                timeToEndTrial = timeToEndTrial + scan.trialDuration(stairContrast,loc);                waitTill_OSX(timeToEndTrial,display,time);                if trialcounter == params.blockDuration / params.trialDuration %last trial in block                    [scanHistory.responses(trialNum), scanHistory.RT(trialNum)] = ...                        doTrial_surround_fMRI(display, scan.trials{13,28}, scan.fix, params);                    timeToEndTrial = timeToEndTrial + scan.trialDuration(13,28);                else                    [scanHistory.responses(trialNum), scanHistory.RT(trialNum)] = ...                        doTrial_surround_fMRI(display, scan.trials{2,28}, scan.fix, params);                    timeToEndTrial = timeToEndTrial + scan.trialDuration(2,28);			                end                scanHistory.correctanswer(trialNum) = 0;            end            waitTill_OSX(timeToEndTrial,display,time);            scanHistory.stimloc(trialNum) = loc;            scanHistory.contrast(trialNum) = stairContrast;            scanHistory.fixSize(trialNum) = scan.fix.targetSize;            scanHsitory.fixTarget(trialNum) = scan.fix.target;            if ~isnan(scanHistory.responses(trialNum)) %some kind of response                if params.feedback == 1                    if scanHistory.responses(trialNum); %correct answer                        nCorrect = nCorrect + 1;                        if nCorrect == params.nDown %already enough correct answers                            %contrast = max(contrast - 1, 1);                             stairContrast = min(stairContrast + 1, params.contrastIncrements);                            nCorrect = 0;                        end                    else %incorrect answer                        %contrast = min(contrast + 1, params.contrastIncrements);                        stairContrast = max(stairContrast - 1, 1);                        nCorrect = 0;                    end                else %no feedback                    if (((scanHistory.correctanswer(trialNum) == 0) & (scanHistory.responses(trialNum) == 0)) ...                            | ((scanHistory.correctanswer(trialNum) == 1) & (scanHistory.responses(trialNum) == 1))) %correct answer                        nCorrect = nCorrect + 1;                        if nCorrect == params.nDown %already enough correct answers                            %contrast = max(contrast - 1, 1); %decrease contrast but not below minimum value                            stairContrast = min(stairContrast + 1, params.contrastIncrements);                            nCorrect = 0;                        end                    elseif (((scanHistory.correctanswer(trialNum) == 0) & (scanHistory.responses(trialNum) == 1)) ...                            | ((scanHistory.correctanswer(trialNum) == 1) & (scanHistory.responses(trialNum) == 0))) %incorrect answer                        %contrast = min(contrast + 1, params.contrastIncrements);                            stairContrast = max(stairContrast - 1, 1);                            nCorrect = 0;                    end                end		            end            trialNum = trialNum + 1;        end %trialcounter        %second half of block alternation - just show surround and null stimulus - no task        for trialcounter = 1:(params.blockDuration / params.trialDuration)            scan.fix.target = 0; scan.fix.insertfix = 0;            if scan.whichCondition == 1 %no surround, diamond fixpoint                contrast = 8; loc = 28;            elseif scan.whichCondition == 2 %parallel surround, diamond fixpoint                contrast = 9; loc = 28;            elseif scan.whichCondition == 3 %orthogonal surround, diamond fixpoint                contrast = 10; loc = 28;            end            doTrial_surround_fMRI(display, scan.trials{contrast,loc}, scan.fix, params);            timeToEndTrial = timeToEndTrial + scan.trialDuration(contrast,loc);            waitTill_OSX(timeToEndTrial,display,time);            if trialcounter == params.blockDuration / params.trialDuration %last "trial"                doTrial_surround_fMRI(display, scan.trials{7,28}, scan.fix, params); % just wait with null square stimulus                timeToEndTrial = timeToEndTrial + scan.trialDuration(7,28);            else                doTrial_surround_fMRI(display, scan.trials{11,28}, scan.fix, params); % just wait with null diamond stimulus                timeToEndTrial = timeToEndTrial + scan.trialDuration(11,28);            end            waitTill_OSX(timeToEndTrial,display,time);            end %trialcounter    end %blockNumelseif scan.whichCondition >=4 %attend to fix    if params.dummyScans == 1        for trialcounter = 1:(params.blockDuration / params.trialDuration)            scan.fix.target = 0; scan.fix.insertfix = 0;            if scan.whichCondition == 4 | scan.whichCondition == 7 %no surround, diamond fixpoint                contrast = 8; loc = 28;            elseif scan.whichCondition == 5 %parallel surround, diamond fixpoint                contrast = 9; loc = 28;            elseif scan.whichCondition == 6 %orthogonal surround, diamond fixpoint                contrast = 10; loc = 28;            doTrial_surround_fMRI(display, scan.trials{contrast,loc}, scan.fix, params);            timeToEndTrial = timeToEndTrial + scan.trialDuration(contrast,loc);            waitTill_OSX(timeToEndTrial,display,time);            if trialcounter == params.blockDuration / params.trialDuration %last "trial"                doTrial_surround_fMRI(display, scan.trials{7,28}, scan.fix, params); % just wait with null square stimulus                timeToEndTrial = timeToEndTrial + scan.trialDuration(7,28);            else                doTrial_surround_fMRI(display, scan.trials{11,28}, scan.fix, params); % just wait with null diamond stimulus                timeToEndTrial = timeToEndTrial + scan.trialDuration(11,28);            end            waitTill_OSX(timeToEndTrial,display,time);        end    end        scan.fix.targetSize = scan.startStep;    nCorrect = 0;    trialNum = 1;    for blockNum = 1:params.numberBlocks        %first half of block alternation - do task        for trialcounter = 1:(params.blockDuration / params.trialDuration)            fixabsorpres = (ceil(rand * 2) - 1);            scan.fix.insertfix = 1;            if fixabsorpres == 1 %there is a fixation "target"                scan.fix.target = 1;            else %no fixation "target"                scan.fix.target = 0;            end            if scan.whichCondition == 7 %practice fixation                doTrial_surround_fMRI(display, scan.trials{scan.startStep, 9}, scan.fix, params);                timeToEndTrial = timeToEndTrial + scan.trialDuration(scan.startStep, 9);            else                doTrial_surround_fMRI(display, scan.trials{scan.matchseqContrast(trialNum),scan.matchseqLoc(trialNum)},...                    scan.fix, params);                timeToEndTrial = timeToEndTrial + scan.trialDuration(scan.matchseqContrast(trialNum),scan.matchseqLoc(trialNum));            end            waitTill_OSX(timeToEndTrial,display,time);            if fixabsorpres == 1                if trialcounter == params.blockDuration / params.trialDuration %last trial in block                    [scanHistory.responses(trialNum), scanHistory.RT(trialNum)] = ...                        doTrial_surround_fMRI(display, scan.trials{12,28}, scan.fix, params);                    timeToEndTrial = timeToEndTrial + scan.trialDuration(12,28);                else                    [scanHistory.responses(trialNum), scanHistory.RT(trialNum)] = ...                        doTrial_surround_fMRI(display, scan.trials{1,28}, scan.fix, params);                    timeToEndTrial = timeToEndTrial + scan.trialDuration(1,28);			                end                scanHistory.correctanswer(trialNum) = 1;            else % fixation target absent                if trialcounter == params.blockDuration / params.trialDuration; %last trial in block                    [scanHistory.responses(trialNum), scanHistory.RT(trialNum)] = ...                        doTrial_surround_fMRI(display, scan.trials{13,28}, scan.fix, params);                    timeToEndTrial = timeToEndTrial + scan.trialDuration(13,28);                else                    [scanHistory.responses(trialNum), scanHistory.RT(trialNum)] = ...                        doTrial_surround_fMRI(display, scan.trials{2,28}, scan.fix, params);                    timeToEndTrial = timeToEndTrial + scan.trialDuration(2,28);			                end                scanHistory.correctanswer(trialNum) = 0;            end            waitTill_OSX(timeToEndTrial,display,time);            scanHistory.stimloc(trialNum) = scan.matchseqLoc(trialNum);            scanHistory.contrast(trialNum) = scan.matchseqContrast(trialNum);            scanHistory.fixSize(trialNum) = scan.fix.targetSize;            scanHsitory.fixTarget(trialNum) = scan.fix.target;            if ~isnan(scanHistory.responses(trialNum)) %some kind of response                if params.feedback == 1                    if scanHistory.responses(trialNum); %correct answer                        nCorrect = nCorrect + 1;                        if nCorrect == params.nDown %already enough correct answers                            scan.fix.targetSize = max(scan.fix.targetSize - 1, 1);                            nCorrect = 0;                        end                    else %incorrect answer                        scan.fix.targetSize = min(scan.fix.targetSize + 1, params.sizeIncrements);                        nCorrect = 0;                    end                else %no feedback                    if (((scanHistory.correctanswer(trialNum) == 0) & (scanHistory.responses(trialNum) == 0)) ...                            | ((scanHistory.correctanswer(trialNum) == 1) & (scanHistory.responses(trialNum) == 1))) %correct answer                        nCorrect = nCorrect + 1;                        if nCorrect == params.nDown %already enough correct answers                            scan.fix.targetSize = max(scan.fix.targetSize - 1, 1);                            nCorrect = 0;                        end                    elseif (((scanHistory.correctanswer(trialNum) == 0) & (scanHistory.responses(trialNum) == 1)) ...                            | ((scanHistory.correctanswer(trialNum) == 1) & (scanHistory.responses(trialNum) == 0))) %incorrect answer                            scan.fix.targetSize = min(scan.fix.targetSize + 1, params.sizeIncrements);                            nCorrect = 0;                    end                end		            end            trialNum = trialNum + 1;        end %trialcounter        %second half of block alternation - just show surround and null stimulus - no task        for trialcounter = 1:(params.blockDuration / params.trialDuration)            scan.fix.target = 0; scan.fix.insertfix = 0;            if scan.whichCondition == 4 | scan.whichCondition == 7 %no surround, diamond fixpoint                contrast = 8; loc = 28;            elseif scan.whichCondition == 5 %parallel surround, diamond fixpoint                contrast = 9; loc = 28;            elseif scan.whichCondition == 6 %orthogonal surround, diamond fixpoint                contrast = 10; loc = 28;            end            doTrial_surround_fMRI(display, scan.trials{contrast,loc}, scan.fix, params);            timeToEndTrial = timeToEndTrial + scan.trialDuration(contrast,loc);            waitTill_OSX(timeToEndTrial,display,time);            if trialcounter == params.blockDuration / params.trialDuration %last "trial"                doTrial_surround_fMRI(display, scan.trials{7,28}, scan.fix, params); % just wait with null square stimulus                timeToEndTrial = timeToEndTrial + scan.trialDuration(7,28);            else                doTrial_surround_fMRI(display, scan.trials{11,28}, scan.fix, params); % just wait with null diamond stimulus                timeToEndTrial = timeToEndTrial + scan.trialDuration(11,28);            end            waitTill_OSX(timeToEndTrial,display,time);            end %trialcounter    end %blockNumenddoTrial_surround_fMRI(display, scan.trials{8,28}, scan.fix, params); %clear screen%scan.fix.insertfix = 1;if showTiming	disp(['Stimulus time: ',num2str(round((GetSecs-time)*100)/100)]);    disp(['Should be: ',num2str(timeToEndTrial)]);end;if params.scanner == 2 %Varian scanner    while 1        WaitSecs(0.001);        [a,b,keycode] = PsychHID('KbCheck',display.forpnum);          if keycode(trigger)            break;        end    end    disp(['First post-stimulus TTL pulse: ',num2str(round((b-time)*100)/100)]);endif params.scanner == 2 %Varian scanner    while 1        WaitSecs(0.001);        [a,b,keycode] = PsychHID('KbCheck',display.forpnum);          if keycode(trigger)            break;        end    end    disp(['Second post-stimulus TTL pulse: ',num2str(round((b-time)*100)/100)]);end